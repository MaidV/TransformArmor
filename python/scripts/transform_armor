#!/usr/bin/env python3
import sys
from pathlib import Path
import json

from PyQt5.QtWidgets import QTreeWidget, QTreeWidgetItem, QApplication, QWidget, QMainWindow, QAction, qApp, QFileDialog

class MainWindow(QMainWindow):
    def __init__(self):
        super(QMainWindow, self).__init__()
        self.setGeometry(0, 0, 1024, 768)
        self.setCentralWidget(QWidget())
        self.init_menubar()
        self.setWindowTitle("TransformArmor")

    def init_menubar(self):
        openFile = QAction("&Open File", self)
        openFile.setShortcut("Ctrl+O")
        openFile.setStatusTip('Open File')
        openFile.triggered.connect(self.file_open)

        exitAction = QAction('&Exit', self)
        exitAction.setShortcut('Ctrl+Q')
        exitAction.setStatusTip('Exit application')
        exitAction.triggered.connect(qApp.quit)

        fileMenu = self.menuBar().addMenu('&File')
        fileMenu.addAction(openFile)
        fileMenu.addAction(exitAction)

    def file_open(self):
        name = QFileDialog.getOpenFileName(self, 'Open File')
        if not Path(name[0]).is_file():
            return

        with open(name[0], 'r') as file:
            armors = json.load(file)
            self.tw = armor_widget(armors, self.centralWidget())
            offset = self.menuBar().height()
            self.tw.resize(512, 728 - offset)
            self.tw.show()

def armor_widget(data, w):
    rows = []
    for mod in sorted(data.keys(), key=str.lower):
        row = QTreeWidgetItem([mod, ""])

        for form in sorted(data[mod].keys(), key=str.lower):
            record = data[mod][form]
            if 32 not in record['slots']:
                continue
            armorname = QTreeWidgetItem([record['name'] + ' (' + record['formID'] + ')', ""])
            armortype = QTreeWidgetItem(['ArmorType', record['type']])
            enchanted = QTreeWidgetItem(['Enchanted', str(record['enchanted'])])
            armorslots = QTreeWidgetItem(['Slots', str(record['slots'])])
            
            armorname.addChild(armortype)
            armorname.addChild(enchanted)
            armorname.addChild(armorslots)
            row.addChild(armorname)
        
        if row.childCount():
            rows.append(row)

    tw = QTreeWidget(w)
    tw.setColumnCount(2)
    tw.setHeaderLabels(["", "Value"])
    for row in rows:
        tw.addTopLevelItem(row)

    return tw

if __name__ == '__main__':
    app = QApplication(sys.argv)

    w = MainWindow()
    w.show()

    sys.exit(app.exec_())
